# Generated by Django 2.2 on 2019-04-19 04:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('bmsapp', '0027_auto_20190404_0944'),
    ]

    operations = [
        migrations.AlterField(
            model_name='alertcondition',
            name='active',
            field=models.BooleanField(default=True, help_text='Uncheck the box to Disable the alert.'),
        ),
        migrations.AlterField(
            model_name='alertcondition',
            name='alert_message',
            field=models.TextField(blank=True, help_text='If left blank, a message will be created automatically.', max_length=400),
        ),
        migrations.AlterField(
            model_name='alertcondition',
            name='condition',
            field=models.CharField(choices=[('>', 'greater than'), ('>=', 'greater than or equal to'), ('<', 'less than'), ('<=', 'less than or equal to'), ('==', 'equal to'), ('!=', 'not equal to'), ('inactive', 'inactive')], default='>', max_length=20, verbose_name='Notify when the Sensor value is'),
        ),
        migrations.AlterField(
            model_name='alertcondition',
            name='only_if_bldg',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bmsapp.Building', verbose_name='But only if building'),
        ),
        migrations.AlterField(
            model_name='alertcondition',
            name='only_if_bldg_mode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bmsapp.BuildingMode', verbose_name='is in this mode'),
        ),
        migrations.AlterField(
            model_name='alertcondition',
            name='priority',
            field=models.CharField(choices=[('-1', 'Low'), ('0', 'Normal'), ('1', 'High'), ('2', 'Emergency')], default='0', max_length=5, verbose_name='Priority of this Alert Situation'),
        ),
        migrations.AlterField(
            model_name='alertcondition',
            name='read_count',
            field=models.PositiveSmallIntegerField(choices=[(1, '1 time'), (2, '2 times'), (3, '3 times'), (4, '4 times'), (5, '5 times')], default=1, verbose_name='Number of times Condition must occur before alerting'),
        ),
        migrations.AlterField(
            model_name='alertcondition',
            name='recipients',
            field=models.ManyToManyField(blank=True, to='bmsapp.AlertRecipient', verbose_name='Who should be notified?'),
        ),
        migrations.AlterField(
            model_name='alertcondition',
            name='test_value',
            field=models.FloatField(blank=True, null=True, verbose_name='this value'),
        ),
        migrations.AlterField(
            model_name='alertcondition',
            name='wait_before_next',
            field=models.FloatField(default=4.0, verbose_name='Hours to Wait before Notifying Again'),
        ),
        migrations.AlterField(
            model_name='alertrecipient',
            name='cell_number',
            field=models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Phone number must be entered as a 10 digit number, including area code, no spaces, dashes or parens.', regex='^\\d{10}$')], verbose_name='10 digit Cell number'),
        ),
        migrations.AlterField(
            model_name='alertrecipient',
            name='cell_sms_gateway',
            field=models.CharField(blank=True, choices=[('msg.acsalaska.com', 'Alaska Communications (ACS)'), ('txt.att.net', 'AT&T'), ('cingular.com', 'Cingular'), ('mobile.gci.net', 'General Communications Inc. (GCI)'), ('sms.mtawireless.com', 'MTA Wireless'), ('messaging.sprintpcs.com', 'Sprint'), ('tmomail.net', 'T-Moble'), ('vtext.com', 'Verizon Wireless')], max_length=60, verbose_name='Cell Phone Carrier'),
        ),
        migrations.AlterField(
            model_name='alertrecipient',
            name='notify_cell',
            field=models.BooleanField(default=True, verbose_name='Send Text Message?'),
        ),
        migrations.AlterField(
            model_name='alertrecipient',
            name='notify_email',
            field=models.BooleanField(default=True, verbose_name='Send Email?'),
        ),
        migrations.AlterField(
            model_name='alertrecipient',
            name='notify_pushover',
            field=models.BooleanField(default=True, verbose_name='Send Pushover Notification?'),
        ),
        migrations.AlterField(
            model_name='alertrecipient',
            name='pushover_id',
            field=models.CharField(blank=True, max_length=30, validators=[django.core.validators.RegexValidator(message='Pushover ID should be exactly 30 characters long.', regex='^\\w{30}$')], verbose_name='Pushover ID'),
        ),
        migrations.AlterField(
            model_name='bldgtosensor',
            name='sensor_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bmsapp.SensorGroup'),
        ),
        migrations.AlterField(
            model_name='building',
            name='current_mode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bmsapp.BuildingMode', verbose_name='Current Operating Mode'),
        ),
        migrations.AlterField(
            model_name='building',
            name='other_properties',
            field=models.TextField(blank=True, help_text='One property per line.  Name of Property, a colon, a space, and then the property value.', verbose_name='Additional Properties to include when exporting data. YAML form, e.g. age: 23'),
        ),
        migrations.AlterField(
            model_name='building',
            name='report_footer',
            field=models.TextField(blank=True, default='', help_text='Use <a href="http://markdowntutorial.com/"> markdown syntax </a> to add links, pictures, etc.  Note that you <b>must</b> include the url prefix (e.g. <i>http://</i>) in your links.', verbose_name='Additional Building Documentation'),
        ),
        migrations.AlterField(
            model_name='building',
            name='schedule',
            field=models.TextField(blank=True, verbose_name='Occupied Schedule of Facility (e.g. M-F: 8a-5p)'),
        ),
        migrations.AlterField(
            model_name='building',
            name='timeline_annotations',
            field=models.TextField(blank=True, help_text='One annotation per line. Use a colon between the annotation and the date/time.', verbose_name="Annotations for events in the building's timeline (e.g. Boiler Replaced: 1/1/2017)"),
        ),
        migrations.AlterField(
            model_name='building',
            name='timezone',
            field=models.CharField(default='US/Alaska', max_length=50, verbose_name='Time Zone of Facility, from tz database'),
        ),
        migrations.AlterField(
            model_name='buildingmode',
            name='name',
            field=models.CharField(max_length=50, verbose_name='Mode Name'),
        ),
        migrations.AlterField(
            model_name='chartbuildinginfo',
            name='parameters',
            field=models.TextField(blank=True, verbose_name='Chart Parameters in YAML Form'),
        ),
        migrations.AlterField(
            model_name='customreport',
            name='markdown_text',
            field=models.TextField(blank=True, help_text='Use <a href="http://markdowntutorial.com/">markdown syntax</a> to add links, pictures, etc.  Note that you <b>must</b> include the url prefix (e.g. <i>http://</i>) in any external links.', verbose_name='Report Content (in markdown):'),
        ),
        migrations.AlterField(
            model_name='dashboarditem',
            name='title',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Widget Title (can be blank)'),
        ),
        migrations.AlterField(
            model_name='dashboarditem',
            name='widget_type',
            field=models.CharField(choices=[('graph', 'Graph'), ('gauge', 'Gauge'), ('LED', 'Red/Green LED'), ('label', 'Label')], default='graph', max_length=15),
        ),
        migrations.AlterField(
            model_name='multibuildingchart',
            name='chart_class',
            field=models.CharField(choices=[('currentvalues_multi.CurrentValuesMulti', 'Current Sensor Values'), ('normalizedbyddbyft2.NormalizedByDDbyFt2', 'Energy / Degree-Day / ft2'), ('normalizedbyft2.NormalizedByFt2', 'Energy / ft2')], max_length=60, null=True, verbose_name='Type of Chart'),
        ),
        migrations.AlterField(
            model_name='multibuildingchart',
            name='parameters',
            field=models.TextField(blank=True, verbose_name='General Chart Parameters in YAML Form'),
        ),
        migrations.AlterField(
            model_name='periodicscript',
            name='description',
            field=models.CharField(blank=True, max_length=80, verbose_name='Optional Description'),
        ),
        migrations.AlterField(
            model_name='periodicscript',
            name='hidden_script_results',
            field=models.TextField(blank=True, verbose_name='Hidden Script results in YAML form'),
        ),
        migrations.AlterField(
            model_name='periodicscript',
            name='period',
            field=models.IntegerField(choices=[(0, 'Disabled'), (300, '5 min'), (600, '10 min'), (900, '15 min'), (1800, '30 min'), (3600, '1 hr'), (7200, '2 hr'), (14400, '4 hr'), (21600, '6 hr'), (43200, '12 hr'), (86400, '24 hr')], default=3600, verbose_name='How often should script run'),
        ),
        migrations.AlterField(
            model_name='periodicscript',
            name='script_file_name',
            field=models.CharField(max_length=50, verbose_name='File name of script'),
        ),
        migrations.AlterField(
            model_name='periodicscript',
            name='script_parameters',
            field=models.TextField(blank=True, verbose_name='Script Parameters in YAML form'),
        ),
        migrations.AlterField(
            model_name='periodicscript',
            name='script_results',
            field=models.TextField(blank=True, verbose_name='Script results in YAML form'),
        ),
        migrations.AlterField(
            model_name='sensor',
            name='formatting_function',
            field=models.CharField(blank=True, max_length=50, verbose_name='Formatting Function Name'),
        ),
        migrations.AlterField(
            model_name='sensor',
            name='function_parameters',
            field=models.TextField(blank=True, verbose_name='Function Parameters in YAML form'),
        ),
        migrations.AlterField(
            model_name='sensor',
            name='is_calculated',
            field=models.BooleanField(default=False, verbose_name='Calculated Field'),
        ),
        migrations.AlterField(
            model_name='sensor',
            name='notes',
            field=models.TextField(default='No sensor notes available.', verbose_name='Please enter descriptive notes about the sensor.'),
        ),
        migrations.AlterField(
            model_name='sensor',
            name='other_properties',
            field=models.TextField(blank=True, help_text='One property per line.  Name of Property, a colon, a space, and then the property value.', verbose_name='Additional Properties to include when exporting data. YAML form, e.g. room: telecom closet'),
        ),
        migrations.AlterField(
            model_name='sensor',
            name='sensor_id',
            field=models.CharField(max_length=80, unique=True, verbose_name='Sensor ID, or Calculated Field ID'),
        ),
        migrations.AlterField(
            model_name='sensor',
            name='tran_calc_function',
            field=models.CharField(blank=True, max_length=80, verbose_name='Transform or Calculated Field Function Name'),
        ),
        migrations.AlterField(
            model_name='sensor',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bmsapp.Unit'),
        ),
        migrations.AlterField(
            model_name='unit',
            name='label',
            field=models.CharField(max_length=20, unique=True, verbose_name='Unit Label'),
        ),
        migrations.AlterField(
            model_name='unit',
            name='measure_type',
            field=models.CharField(max_length=30, verbose_name='Measurement Type'),
        ),
    ]
